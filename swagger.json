{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Stackoverflow-lite Web App API",
    "description": "API docs for StackOverFlow-Lite",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "tersoo.atsen@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "https://stack-overflow-lite-app.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [{
      "name": "Users",
      "description": "User API enpoints"
    },
    {
      "name": "Questions",
      "description": "Question API enpoints"
    },
    {
      "name": "Answers",
      "description": "Answer API enpoints"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Signs up a new user",
        "description": "Signup a new application user",
        "operationId": "userSignup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "A user object to be registered in the application",
          "required": true,
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "responses": {
          "200": {
            "description": "user created"
          },
          "409": {
            "description": "user already exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Logs in a user",
        "description": "Logins a registered user into the application",
        "tags": [
          "Users"
        ],
        "operationId": "userLogin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "email",
            "in": "query",
            "description": "User email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login (hidden)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "login sucessful"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "login failed"
          }
        }
      }
    },
    "/questions": {
      "get": {
        "security": [{
          "token": []
        }],
        "tags": [
          "Questions"
        ],
        "summary": "Gets all questions",
        "description": "Get all questions stored in the application",
        "operationId": "getQuestions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data retreival successful"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "security": [{
          "token": []
        }],
        "tags": [
          "Questions"
        ],
        "summary": "Adds question",
        "description": "Add a new question to the application",
        "operationId": "postQuestion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "x-access-token",
            "in": "header",
            "description": "A token is required for authentication and authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Question object to be added to the application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Question"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Question added successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized! Invalid token"
          },
          "403": {
            "description": "No token!, Action forbidden! please sign up or login"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/questions/{questionId}": {
      "get": {
        "summary": "Finds a question",
        "description": "Finds single question by ID",
        "tags": [
          "Questions"
        ],
        "operationId": "getSingleQuestion",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "questionId",
          "in": "path",
          "description": "ID of question to return",
          "required": true,
          "type": "integer"
        }],
        "responses": {
          "200": {
            "description": "Request was successful"
          },
          "404": {
            "description": "Question not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "security": [{
          "token": []
        }],
        "tags": [
          "Questions"
        ],
        "summary": "Deletes a question",
        "description": "Delete a question by ID",
        "operationId": "deleteSingleQuestion",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "x-access-token",
            "in": "header",
            "description": "A token is required for authentication and authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of question to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Question deleted successfully"
          },
          "401": {
            "description": "Unauthorized, please provide a valid token"
          },
          "404": {
            "description": "Question not found"
          }
        }
      }
    },
    "/questions/{questionId}/answers": {
      "post": {
        "security": [{
          "token": []
        }],
        "tags": [
          "Answers"
        ],
        "summary": "Add answer",
        "description": "Add a new answer for a question",
        "operationId": "postAnswer",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "x-access-token",
            "in": "header",
            "description": "A token is required for authentication and authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of question with the answer",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Answer",
            "in": "body",
            "description": "A answer object to be added to the application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostAnswerModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized!"
          },
          "403": {
            "description": "Access denied!"
          }
        }
      }
    },
    "/questions/{questionId}/answers/{answerId}": {
      "put": {
        "security": [{
          "token": []
        }],
        "tags": [
          "Answers"
        ],
        "summary": "Update answer",
        "description": "Update answer",
        "operationId": "Questions1AnswersPost",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "x-access-token",
            "in": "header",
            "description": "A token is required for authentication and authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of question with the answer",
            "required": true,
            "type": "integer"
          },
          {
            "name": "answerId",
            "in": "path",
            "description": "ID of answer to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Answer",
            "in": "body",
            "description": "Updates an answer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "username",
        "email",
        "password",
        "confrimpassword"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmpassword": {
          "type": "string"
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "Answers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Answer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
